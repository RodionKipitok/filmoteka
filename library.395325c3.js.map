{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,S,eCmBIC,EACAC,E,uCApBJC,G,aAAAH,EAAA,U,yCA6DA,SAASI,EAAwBC,GAC3BA,EAAEC,OAAOC,UAAUC,SAAS,mBAC9B,EAAAL,EAAAM,gCAA+BJ,EAAEC,OAAQJ,GAChCG,EAAEC,OAAOC,UAAUC,SAAS,kBACrC,EAAAL,EAAAO,8BAA6BL,EAAEC,OAAQJ,E,CAIpC,SAASS,EAAkBC,G,IAChCC,EADgCD,EAChCC,YACAC,EAFgCF,EAEhCE,UACAC,EAHgCH,EAGhCG,OACAC,EAJgCJ,EAIhCI,MACAC,EALgCL,EAKhCK,WACAC,EANgCN,EAMhCM,aACAC,EAPgCP,EAOhCO,WACAC,EARgCR,EAQhCQ,SACAC,EATgCT,EAShCS,GAGMC,GAA4B,EAAAnB,EAAAoB,sBAAqBpB,EAAAqB,oBACjDC,GAA0B,EAAAtB,EAAAoB,sBAAqBpB,EAAAuB,kBAEjDC,EAAiB,iBACjBC,EAAe,eAEfN,GAA6BA,EAA0BD,KACzDM,EAAiB,uBAGfF,GAA2BA,EAAwBJ,KACrDO,EAAe,qBAGjB,IAAMC,EAAcd,EAAOe,KAAI,SAAAC,G,OAASA,EAAMC,I,IAE9C,MAAO,8CAKWC,OAHRhB,EACIiB,EAAAC,UAAYlB,EACZ,4FACL,WAA2BgB,OAAlBjB,EAAM,cAEWiB,OAFCZ,EAAG,qFAMQY,OAJZjB,EAAM,mMAMYiB,OAFNpB,EAAYuB,QAC3C,GACA,uCAIIH,OAJiCnB,EAAU,gKAQ3CmB,OAJAd,EAAWiB,QAAQ,GAAG,6JAQtBH,OAJAjB,GAAgBE,EAAa,oJAQQe,OAJrCJ,EAAY,oKAQdI,OAJuCb,EAAS,8MAMiDa,OAFjGN,EAAe,kJAIwFM,OAFNL,EAAa,8JAEJK,OAAHZ,EAAG,6D,gBArH9HgB,KAAKC,eAAeC,iBAAiB,SAK9B,SAA0BlC,GAG/B,GAFAJ,EAAUuC,OAAOnC,EAAEC,OAAOmC,QAAQpB,KACrBhB,EAAEC,OAAOoC,QAAQ,WACjBrC,EAAEC,OAAOC,UAAUC,SAAS,6BACvC,OAGF,IAAImC,EAAS,GAEPC,GACJ,EAAAzC,EAAAoB,sBAAqBpB,EAAAqB,oBACjBqB,GAA8B,EAAA1C,EAAAoB,sBAAqBpB,EAAAuB,kBAErDkB,EAA8B3C,IAChCC,EAAe0C,EAA8B3C,GAE7C0C,EAAShC,EAAkBiC,EAA8B3C,KAChD4C,EAA4B5C,KACrCC,EAAe2C,EAA4B5C,GAC3C0C,EAAShC,EAAkBkC,EAA4B5C,KAEzD6C,EAAAT,KAAKU,MAAMC,UAAYL,EACvBG,EAAAT,KAAKY,KAAK1C,UAAU2C,IAAI,cAGxB,EAAAC,EAAAC,aAGAC,OAAOd,iBAAiB,UAAWe,EAAAC,eACnCT,EAAAT,KAAKmB,cAAcjD,UAAU2C,IAAI,cACjCJ,EAAAT,KAAKmB,cAAcjB,iBAAiB,QAASe,EAAAG,iBAC7CX,EAAAT,KAAKqB,cAAcnB,iBAAiB,QAASe,EAAAK,eAGzCb,EAAAT,KAAKmB,cAAcjD,UAAUC,SAAS,eACxCsC,EAAAT,KAAKuB,eAAerB,iBAAiB,QAASnC,E,sBDvCtB,EAA5BL,EAAA8D,eACAR,OAAOd,iBAAiB,QAAQ,SAAUlC,IACxC,EAAAN,EAAA+D,c,IAKwBT,OAAnBd,iBAAiB,SAAUwB,EAAAC,gBAGmBX,OAA9Cd,iBAAiB,OAAQ0B,EAAAC,mCAEhCpB,EAAAT,KAAKC,eAAeC,iBAAiB,QAASY,EAAA,uB","sources":["src/library.js","src/js/open-modal-library.js"],"sourcesContent":["import { spinnerPlay, spinnerStop } from './js/spinner';\n\n\nimport './js/switch-bg-theme';\n\nimport { scrollFunction } from './js/button-up';\n\nimport { onCliсkBtnWatchGallery } from './js/API/get-movie-trailer';\n\n\n\nimport { onOpenWatchedLibrary } from './js/watched-library';\n\nimport { loadWatchedMoviesFromLocalStorage } from './js/watched-library';\nimport { onLibraryGallery } from './js/open-modal-library';\nimport { refs } from './js/refs';\n\n///Запуск спінера при завантаженні\nspinnerPlay();\nwindow.addEventListener('load', function (e) {\n  spinnerStop();\n});\n///Закінчення спінера при завантаженні\n\n///Запуск кнопки вверх при скролі\nwindow.addEventListener('scroll', scrollFunction);\n\n// При завантаженні сторінки My library рендериться картки з локал сторадж watchedMovies\nwindow.addEventListener('load', loadWatchedMoviesFromLocalStorage);\n\nrefs.libraryGallery.addEventListener('click', onCliсkBtnWatchGallery);\n","import {\n  KEY_WATCHED_MOVIES,\n  KEY_QUEUE_MOVIES,\n  loadFromLocalStorage,\n  checkLocalStorageWatchedMovies,\n  checkLocalStorageQueueMovies,\n} from './local-storage';\nimport { renderBtn } from './API/get-movie-trailer';\nimport {\n  onEscKeyPress,\n  onBackdropClick,\n  offCloseModal,\n} from './API/get-movie-info';\nimport { IMAGE_URL } from './API/api-params';\n\nimport { refs } from './refs';\n\nrefs.libraryGallery.addEventListener('click', onLibraryGallery);\n\nlet idMovie;\nlet currentMovie;\n\nexport function onLibraryGallery(e) {\n  idMovie = Number(e.target.dataset.id);\n  const film = e.target.closest('.frame');\n  if (!film || e.target.classList.contains('watch-trailer-btn-gallery')) {\n    return;\n  }\n\n  let markup = '';\n\n  const watchedMoviesFromLocalStorage =\n    loadFromLocalStorage(KEY_WATCHED_MOVIES);\n  const queueMoviesFromLocalStorage = loadFromLocalStorage(KEY_QUEUE_MOVIES);\n\n  if (watchedMoviesFromLocalStorage[idMovie]) {\n    currentMovie = watchedMoviesFromLocalStorage[idMovie];\n\n    markup = createMarkupModal(watchedMoviesFromLocalStorage[idMovie]);\n  } else if (queueMoviesFromLocalStorage[idMovie]) {\n    currentMovie = queueMoviesFromLocalStorage[idMovie];\n    markup = createMarkupModal(queueMoviesFromLocalStorage[idMovie]);\n  }\n  refs.modal.innerHTML = markup;\n  refs.body.classList.add('no-scroll');\n\n  // render trailer\n  renderBtn();\n\n  // close\n  window.addEventListener('keydown', onEscKeyPress);\n  refs.modalBackdrop.classList.add('show-modal');\n  refs.modalBackdrop.addEventListener('click', onBackdropClick);\n  refs.closeModalBtn.addEventListener('click', offCloseModal);\n\n  //Вешаем событие на buttons:\n  if (refs.modalBackdrop.classList.contains('show-modal')) {\n    refs.modalContainer.addEventListener('click', onModalLibraryBtnsClick);\n  }\n}\n\nfunction onModalLibraryBtnsClick(e) {\n  if (e.target.classList.contains('js-add-watched')) {\n    checkLocalStorageWatchedMovies(e.target, currentMovie);\n  } else if (e.target.classList.contains('js-add-queue')) {\n    checkLocalStorageQueueMovies(e.target, currentMovie);\n  }\n}\n\nexport function createMarkupModal({\n  voteAverage,\n  voteCount,\n  genres,\n  title,\n  posterPath,\n  originalName,\n  popularity,\n  overview,\n  id,\n}) {\n  // Проверка есть ли такой обьект в локал сторадж?\n  const watchedMoviesLocalStorage = loadFromLocalStorage(KEY_WATCHED_MOVIES);\n  const queueMoviesLocalStorage = loadFromLocalStorage(KEY_QUEUE_MOVIES);\n\n  let textBtnWatched = 'ADD TO WATCHED';\n  let textBtnQueue = 'ADD TO QUEUE';\n\n  if (watchedMoviesLocalStorage && watchedMoviesLocalStorage[id]) {\n    textBtnWatched = 'REMOVE FROM WATCHED';\n  }\n\n  if (queueMoviesLocalStorage && queueMoviesLocalStorage[id]) {\n    textBtnQueue = 'REMOVE FROM QUEUE';\n  }\n\n  const modalGenres = genres.map(genre => genre.name);\n\n  return `\n          <img class=\"img-modal\"    src=\"${\n            posterPath\n              ? IMAGE_URL + posterPath\n              : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n          }\" alt=\"${title}\" data-id=${id} />\n          <div class=\"container-modal\">\n            <b class=\"title-modal\">${title}</b>\n            <table class=\"table\">\n              <tr class=\"table-separator\">\n                <th class=\"table__text\">Vote / Votes</th>\n                <th><span class=\"vote-average\">${voteAverage.toFixed(\n                  1\n                )}</span> / <span class=\"vote-count\">${voteCount}</span></th>\n              </tr>\n              <tr class=\"table-separator\">\n                <th class=\"table__text\">Popularity</th>\n                <th>${popularity.toFixed(1)}</th>\n              </tr>\n              <tr class=\"table-separator\">\n                <th class=\"table__text\">Original Title</th>\n                <th>${title ? title : originalName}</th>\n              </tr>\n              <tr class=\"table-separator\">\n                <th class=\"table__text\">Genre</th>\n                <th>${modalGenres}</th>\n              </tr>\n            </table>\n            <b class=\"title-about__modal\">ABOUT</b>\n            <p class=\"about-text__modal about-scrollbar\">${overview}\n            </p>\n            <div class=\"buttons-modal\">\n              <button aria-label=\"add or remove from watched\" type=\"button\" class=\"button-watched__modal js-add-watched\">\n                  ${textBtnWatched}\n              </button>\n              <button type=\"button\" aria-label=\"add or remove from queue\" class=\"button-queue__modal js-add-queue\">${textBtnQueue}</button>\n              </div>\n               <button type=\"button\" aria-label=\"watch the trailer\" class=\"watch-trailer-btn-gallery is-hidden \" data-id=${id} >Watch the trailer</button>\n          </div>\n          `;\n}\n"],"names":["$j1lrD","parcelRequire","$572566355069554e$var$idMovie","$572566355069554e$var$currentMovie","$4LMMA","$572566355069554e$var$onModalLibraryBtnsClick","e","target","classList","contains","checkLocalStorageWatchedMovies","checkLocalStorageQueueMovies","$572566355069554e$export$800eaa8b597dc39b","param","voteAverage","voteCount","genres","title","posterPath","originalName","popularity","overview","id","watchedMoviesLocalStorage","loadFromLocalStorage","KEY_WATCHED_MOVIES","queueMoviesLocalStorage","KEY_QUEUE_MOVIES","textBtnWatched","textBtnQueue","modalGenres","map","genre","name","concat","$aLMAk","IMAGE_URL","toFixed","refs","libraryGallery","addEventListener","Number","dataset","closest","markup","watchedMoviesFromLocalStorage","queueMoviesFromLocalStorage","$4Nugj","modal","innerHTML","body","add","$84yK5","renderBtn","window","$5Hwq9","onEscKeyPress","modalBackdrop","onBackdropClick","closeModalBtn","offCloseModal","modalContainer","spinnerPlay","spinnerStop","$ghI91","scrollFunction","$5UWmu","loadWatchedMoviesFromLocalStorage"],"version":3,"file":"library.395325c3.js.map"}