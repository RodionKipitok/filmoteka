{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,S,sDCAAC,G,aAAAD,EAAA,U,yCAmBA,IAAIE,EACAC,EAyCJ,SAASC,EAAwBC,GAC3BA,EAAEC,OAAOC,UAAUC,SAAS,mBAC9B,EAAAP,EAAAQ,gCAA+BJ,EAAEC,OAAQH,GAChCE,EAAEC,OAAOC,UAAUC,SAAS,kBACrC,EAAAP,EAAAS,8BAA6BL,EAAEC,OAAQH,E,CAIpC,SAASQ,GAAkBC,YAChCA,EAAWC,UACXA,EAASC,OACTA,EAAMC,MACNA,EAAKC,WACLA,EAAUC,aACVA,EAAYC,WACZA,EAAUC,SACVA,EAAQC,GACRA,IAGA,MAAMC,GAA4B,EAAApB,EAAAqB,sBAAqBrB,EAAAsB,oBACjDC,GAA0B,EAAAvB,EAAAqB,sBAAqBrB,EAAAwB,kBAErD,IAAIC,EAAiB,iBACjBC,EAAe,eAEfN,GAA6BA,EAA0BD,KACzDM,EAAiB,uBAGfF,GAA2BA,EAAwBJ,KACrDO,EAAe,qBAGjB,MAAMC,EAAcd,EAAOe,KAAIC,GAASA,EAAMC,OAE9C,MAAO,8CAEGf,EACIgB,EAAAC,UAAYjB,EACZ,qGACID,cAAkBK,qFAEDL,mMAIYH,EAAYsB,QAC3C,wCACqCrB,gKAIjCK,EAAWgB,QAAQ,8JAInBnB,GAAgBE,oJAIhBW,oKAIqCT,8MAIvCO,kJAEiGC,8JAEMP,6D,gBArH3He,KAAKC,eAAeC,iBAAiB,SAK9B,SAA0BhC,GAC/BH,EAAUoC,OAAOjC,EAAEC,OAAOiC,QAAQnB,IAElC,IADaf,EAAEC,OAAOkC,QAAQ,WACjBnC,EAAEC,OAAOC,UAAUC,SAAS,6BACvC,OAGF,IAAIiC,EAAS,GAEb,MAAMC,GACJ,EAAAzC,EAAAqB,sBAAqBrB,EAAAsB,oBACjBoB,GAA8B,EAAA1C,EAAAqB,sBAAqBrB,EAAAwB,kBAErDiB,EAA8BxC,IAChCC,EAAeuC,EAA8BxC,GAE7CuC,EAAS9B,EAAkB+B,EAA8BxC,KAChDyC,EAA4BzC,KACrCC,EAAewC,EAA4BzC,GAC3CuC,EAAS9B,EAAkBgC,EAA4BzC,KAEzD0C,EAAAT,KAAKU,MAAMC,UAAYL,EACvBG,EAAAT,KAAKY,KAAKxC,UAAUyC,IAAI,cAGxB,EAAAC,EAAAC,aAGAC,OAAOd,iBAAiB,UAAWe,EAAAC,eACnCT,EAAAT,KAAKmB,cAAc/C,UAAUyC,IAAI,cACjCJ,EAAAT,KAAKmB,cAAcjB,iBAAiB,QAASe,EAAAG,iBAC7CX,EAAAT,KAAKqB,cAAcnB,iBAAiB,QAASe,EAAAK,eAGzCb,EAAAT,KAAKmB,cAAc/C,UAAUC,SAAS,eACxCoC,EAAAT,KAAKuB,eAAerB,iBAAiB,QAASjC,E,sBDvCtB,EAA5BL,EAAA4D,eACAR,OAAOd,iBAAiB,QAAQ,SAAUhC,IACxC,EAAAN,EAAA6D,c,IAKwBT,OAAnBd,iBAAiB,SAAUwB,EAAAC,gBAGmBX,OAA9Cd,iBAAiB,OAAQ0B,EAAAC,mCAEhCpB,EAAAT,KAAKC,eAAeC,iBAAiB,QAASY,EAAA","sources":["src/library.js","src/js/open-modal-library.js"],"sourcesContent":["import { spinnerPlay, spinnerStop } from './js/spinner';\n\n\nimport './js/switch-bg-theme';\n\nimport { scrollFunction } from './js/button-up';\n\nimport { onCliсkBtnWatchGallery } from './js/API/get-movie-trailer';\n\n\n\nimport { onOpenWatchedLibrary } from './js/watched-library';\n\nimport { loadWatchedMoviesFromLocalStorage } from './js/watched-library';\nimport { onLibraryGallery } from './js/open-modal-library';\nimport { refs } from './js/refs';\n\n///Запуск спінера при завантаженні\nspinnerPlay();\nwindow.addEventListener('load', function (e) {\n  spinnerStop();\n});\n///Закінчення спінера при завантаженні\n\n///Запуск кнопки вверх при скролі\nwindow.addEventListener('scroll', scrollFunction);\n\n// При завантаженні сторінки My library рендериться картки з локал сторадж watchedMovies\nwindow.addEventListener('load', loadWatchedMoviesFromLocalStorage);\n\nrefs.libraryGallery.addEventListener('click', onCliсkBtnWatchGallery);\n","import {\n  KEY_WATCHED_MOVIES,\n  KEY_QUEUE_MOVIES,\n  loadFromLocalStorage,\n  checkLocalStorageWatchedMovies,\n  checkLocalStorageQueueMovies,\n} from './local-storage';\nimport { renderBtn } from './API/get-movie-trailer';\nimport {\n  onEscKeyPress,\n  onBackdropClick,\n  offCloseModal,\n} from './API/get-movie-info';\nimport { IMAGE_URL } from './API/api-params';\n\nimport { refs } from './refs';\n\nrefs.libraryGallery.addEventListener('click', onLibraryGallery);\n\nlet idMovie;\nlet currentMovie;\n\nexport function onLibraryGallery(e) {\n  idMovie = Number(e.target.dataset.id);\n  const film = e.target.closest('.frame');\n  if (!film || e.target.classList.contains('watch-trailer-btn-gallery')) {\n    return;\n  }\n\n  let markup = '';\n\n  const watchedMoviesFromLocalStorage =\n    loadFromLocalStorage(KEY_WATCHED_MOVIES);\n  const queueMoviesFromLocalStorage = loadFromLocalStorage(KEY_QUEUE_MOVIES);\n\n  if (watchedMoviesFromLocalStorage[idMovie]) {\n    currentMovie = watchedMoviesFromLocalStorage[idMovie];\n\n    markup = createMarkupModal(watchedMoviesFromLocalStorage[idMovie]);\n  } else if (queueMoviesFromLocalStorage[idMovie]) {\n    currentMovie = queueMoviesFromLocalStorage[idMovie];\n    markup = createMarkupModal(queueMoviesFromLocalStorage[idMovie]);\n  }\n  refs.modal.innerHTML = markup;\n  refs.body.classList.add('no-scroll');\n\n  // render trailer\n  renderBtn();\n\n  // close\n  window.addEventListener('keydown', onEscKeyPress);\n  refs.modalBackdrop.classList.add('show-modal');\n  refs.modalBackdrop.addEventListener('click', onBackdropClick);\n  refs.closeModalBtn.addEventListener('click', offCloseModal);\n\n  //Вешаем событие на buttons:\n  if (refs.modalBackdrop.classList.contains('show-modal')) {\n    refs.modalContainer.addEventListener('click', onModalLibraryBtnsClick);\n  }\n}\n\nfunction onModalLibraryBtnsClick(e) {\n  if (e.target.classList.contains('js-add-watched')) {\n    checkLocalStorageWatchedMovies(e.target, currentMovie);\n  } else if (e.target.classList.contains('js-add-queue')) {\n    checkLocalStorageQueueMovies(e.target, currentMovie);\n  }\n}\n\nexport function createMarkupModal({\n  voteAverage,\n  voteCount,\n  genres,\n  title,\n  posterPath,\n  originalName,\n  popularity,\n  overview,\n  id,\n}) {\n  // Проверка есть ли такой обьект в локал сторадж?\n  const watchedMoviesLocalStorage = loadFromLocalStorage(KEY_WATCHED_MOVIES);\n  const queueMoviesLocalStorage = loadFromLocalStorage(KEY_QUEUE_MOVIES);\n\n  let textBtnWatched = 'ADD TO WATCHED';\n  let textBtnQueue = 'ADD TO QUEUE';\n\n  if (watchedMoviesLocalStorage && watchedMoviesLocalStorage[id]) {\n    textBtnWatched = 'REMOVE FROM WATCHED';\n  }\n\n  if (queueMoviesLocalStorage && queueMoviesLocalStorage[id]) {\n    textBtnQueue = 'REMOVE FROM QUEUE';\n  }\n\n  const modalGenres = genres.map(genre => genre.name);\n\n  return `\n          <img class=\"img-modal\"    src=\"${\n            posterPath\n              ? IMAGE_URL + posterPath\n              : 'https://ik.imagekit.io/tc8jxffbcvf/default-movie-portrait_EmJUj9Tda5wa.jpg?tr=fo-auto,di-'\n          }\" alt=\"${title}\" data-id=${id} />\n          <div class=\"container-modal\">\n            <b class=\"title-modal\">${title}</b>\n            <table class=\"table\">\n              <tr class=\"table-separator\">\n                <th class=\"table__text\">Vote / Votes</th>\n                <th><span class=\"vote-average\">${voteAverage.toFixed(\n                  1\n                )}</span> / <span class=\"vote-count\">${voteCount}</span></th>\n              </tr>\n              <tr class=\"table-separator\">\n                <th class=\"table__text\">Popularity</th>\n                <th>${popularity.toFixed(1)}</th>\n              </tr>\n              <tr class=\"table-separator\">\n                <th class=\"table__text\">Original Title</th>\n                <th>${title ? title : originalName}</th>\n              </tr>\n              <tr class=\"table-separator\">\n                <th class=\"table__text\">Genre</th>\n                <th>${modalGenres}</th>\n              </tr>\n            </table>\n            <b class=\"title-about__modal\">ABOUT</b>\n            <p class=\"about-text__modal about-scrollbar\">${overview}\n            </p>\n            <div class=\"buttons-modal\">\n              <button aria-label=\"add or remove from watched\" type=\"button\" class=\"button-watched__modal js-add-watched\">\n                  ${textBtnWatched}\n              </button>\n              <button type=\"button\" aria-label=\"add or remove from queue\" class=\"button-queue__modal js-add-queue\">${textBtnQueue}</button>\n              </div>\n               <button type=\"button\" aria-label=\"watch the trailer\" class=\"watch-trailer-btn-gallery is-hidden \" data-id=${id} >Watch the trailer</button>\n          </div>\n          `;\n}\n"],"names":["$04jNI","parcelRequire","$b5rV1","$52d45de5747c39fe$var$idMovie","$52d45de5747c39fe$var$currentMovie","$52d45de5747c39fe$var$onModalLibraryBtnsClick","e","target","classList","contains","checkLocalStorageWatchedMovies","checkLocalStorageQueueMovies","$52d45de5747c39fe$export$800eaa8b597dc39b","voteAverage","voteCount","genres","title","posterPath","originalName","popularity","overview","id","watchedMoviesLocalStorage","loadFromLocalStorage","KEY_WATCHED_MOVIES","queueMoviesLocalStorage","KEY_QUEUE_MOVIES","textBtnWatched","textBtnQueue","modalGenres","map","genre","name","$czlJg","IMAGE_URL","toFixed","refs","libraryGallery","addEventListener","Number","dataset","closest","markup","watchedMoviesFromLocalStorage","queueMoviesFromLocalStorage","$krGWQ","modal","innerHTML","body","add","$1mAvE","renderBtn","window","$ie2oG","onEscKeyPress","modalBackdrop","onBackdropClick","closeModalBtn","offCloseModal","modalContainer","spinnerPlay","spinnerStop","$h53OD","scrollFunction","$9MILY","loadWatchedMoviesFromLocalStorage"],"version":3,"file":"library.9ec07ab2.js.map"}